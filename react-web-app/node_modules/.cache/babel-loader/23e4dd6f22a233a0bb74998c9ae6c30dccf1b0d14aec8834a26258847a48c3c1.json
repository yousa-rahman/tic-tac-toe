{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'/api';// Create axios instance with default config\nconst apiClient=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add token to requests if available\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Handle token expiration\napiClient.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export const authService={// Register a new user\nasync register(userData){const response=await apiClient.post('/auth/register',userData);return response.data;},// Login user\nasync login(credentials){const response=await apiClient.post('/auth/login',credentials);return response.data;},// Verify JWT token\nasync verifyToken(token){const response=await apiClient.get('/auth/verify',{headers:{Authorization:`Bearer ${token}`}});return response.data;},// Logout user (client-side only)\nlogout(){localStorage.removeItem('token');},// Get current token\ngetToken(){return localStorage.getItem('token');},// Check if user is authenticated\nisAuthenticated(){return!!localStorage.getItem('token');}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","register","userData","post","data","login","credentials","verifyToken","get","logout","getToken","isAuthenticated"],"sources":["/Users/yousuf/Downloads/tic-tac-toe-engine/react-web-app/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '/api';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle token expiration\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authService = {\n  // Register a new user\n  async register(userData) {\n    const response = await apiClient.post('/auth/register', userData);\n    return response.data;\n  },\n\n  // Login user\n  async login(credentials) {\n    const response = await apiClient.post('/auth/login', credentials);\n    return response.data;\n  },\n\n  // Verify JWT token\n  async verifyToken(token) {\n    const response = await apiClient.get('/auth/verify', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  },\n\n  // Logout user (client-side only)\n  logout() {\n    localStorage.removeItem('token');\n  },\n\n  // Get current token\n  getToken() {\n    return localStorage.getItem('token');\n  },\n\n  // Check if user is authenticated\n  isAuthenticated() {\n    return !!localStorage.getItem('token');\n  },\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,MAAM,CAE5D;AACA,KAAM,CAAAC,SAAS,CAAGL,KAAK,CAACM,MAAM,CAAC,CAC7BC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,CAAG,UAAUH,KAAK,EAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAK,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAZ,SAAS,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAChCS,QAAQ,EAAKA,QAAQ,CACrBH,KAAK,EAAK,KAAAI,eAAA,CACT,GAAI,EAAAA,eAAA,CAAAJ,KAAK,CAACG,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CACA,MAAO,CAAAR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,MAAO,MAAM,CAAAU,WAAW,CAAG,CACzB;AACA,KAAM,CAAAC,QAAQA,CAACC,QAAQ,CAAE,CACvB,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAf,SAAS,CAACyB,IAAI,CAAC,gBAAgB,CAAED,QAAQ,CAAC,CACjE,MAAO,CAAAT,QAAQ,CAACW,IAAI,CACtB,CAAC,CAED;AACA,KAAM,CAAAC,KAAKA,CAACC,WAAW,CAAE,CACvB,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAf,SAAS,CAACyB,IAAI,CAAC,aAAa,CAAEG,WAAW,CAAC,CACjE,MAAO,CAAAb,QAAQ,CAACW,IAAI,CACtB,CAAC,CAED;AACA,KAAM,CAAAG,WAAWA,CAACrB,KAAK,CAAE,CACvB,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAf,SAAS,CAAC8B,GAAG,CAAC,cAAc,CAAE,CACnD3B,OAAO,CAAE,CACPQ,aAAa,CAAE,UAAUH,KAAK,EAChC,CACF,CAAC,CAAC,CACF,MAAO,CAAAO,QAAQ,CAACW,IAAI,CACtB,CAAC,CAED;AACAK,MAAMA,CAAA,CAAG,CACPtB,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC,CAED;AACAc,QAAQA,CAAA,CAAG,CACT,MAAO,CAAAvB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACtC,CAAC,CAED;AACAuB,eAAeA,CAAA,CAAG,CAChB,MAAO,CAAC,CAACxB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACxC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}