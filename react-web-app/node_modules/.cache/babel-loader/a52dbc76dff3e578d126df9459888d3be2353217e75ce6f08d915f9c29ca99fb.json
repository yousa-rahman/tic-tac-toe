{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { gameService } from '../../services/gameService';\n\n// Async thunks\nexport const startGame = createAsyncThunk('game/startGame', async (startedBy, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await gameService.startGame(startedBy);\n    return response;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      message: 'Failed to start game'\n    });\n  }\n});\nexport const makeMove = createAsyncThunk('game/makeMove', async (moveData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await gameService.makeMove(moveData);\n    return response;\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'Failed to make move'\n    });\n  }\n});\nexport const getGameState = createAsyncThunk('game/getGameState', async (gameId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await gameService.getGameState(gameId);\n    return response;\n  } catch (error) {\n    var _error$response3;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n      message: 'Failed to get game state'\n    });\n  }\n});\nconst initialState = {\n  board: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  currentPlayer: 'X',\n  gameOver: false,\n  winner: null,\n  isDraw: false,\n  gameId: null,\n  startedBy: null,\n  loading: false,\n  error: null,\n  nextMove: null\n};\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    resetGame: state => {\n      state.board = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n      state.currentPlayer = 'X';\n      state.gameOver = false;\n      state.winner = null;\n      state.isDraw = false;\n      state.gameId = null;\n      state.startedBy = null;\n      state.error = null;\n      state.nextMove = null;\n    },\n    setBoard: (state, action) => {\n      state.board = action.payload;\n    },\n    setCurrentPlayer: (state, action) => {\n      state.currentPlayer = action.payload;\n    },\n    setGameOver: (state, action) => {\n      state.gameOver = action.payload;\n    },\n    setWinner: (state, action) => {\n      state.winner = action.payload;\n    },\n    setIsDraw: (state, action) => {\n      state.isDraw = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    setNextMove: (state, action) => {\n      state.nextMove = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Start Game\n    .addCase(startGame.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(startGame.fulfilled, (state, action) => {\n      state.loading = false;\n      state.board = action.payload.board;\n      state.currentPlayer = action.payload.currentPlayer;\n      state.gameOver = action.payload.gameOver;\n      state.winner = action.payload.winner;\n      state.isDraw = action.payload.isDraw;\n      state.gameId = action.payload.gameId;\n      state.startedBy = action.payload.startedBy;\n      state.nextMove = action.payload.nextMove;\n    }).addCase(startGame.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message) || 'Failed to start game';\n    })\n    // Make Move\n    .addCase(makeMove.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(makeMove.fulfilled, (state, action) => {\n      state.loading = false;\n      state.board = action.payload.board;\n      state.currentPlayer = action.payload.currentPlayer;\n      state.gameOver = action.payload.gameOver;\n      state.winner = action.payload.winner;\n      state.isDraw = action.payload.isDraw;\n      state.nextMove = action.payload.nextMove;\n    }).addCase(makeMove.rejected, (state, action) => {\n      var _action$payload2;\n      state.loading = false;\n      state.error = ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message) || 'Failed to make move';\n    })\n    // Get Game State\n    .addCase(getGameState.pending, state => {\n      state.loading = true;\n    }).addCase(getGameState.fulfilled, (state, action) => {\n      state.loading = false;\n      state.board = action.payload.board;\n      state.gameOver = action.payload.gameOver;\n      state.winner = action.payload.winner;\n      state.isDraw = action.payload.isDraw;\n      state.startedBy = action.payload.startedBy;\n    }).addCase(getGameState.rejected, (state, action) => {\n      var _action$payload3;\n      state.loading = false;\n      state.error = ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.message) || 'Failed to get game state';\n    });\n  }\n});\nexport const {\n  resetGame,\n  setBoard,\n  setCurrentPlayer,\n  setGameOver,\n  setWinner,\n  setIsDraw,\n  clearError,\n  setNextMove\n} = gameSlice.actions;\nexport default gameSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","gameService","startGame","startedBy","rejectWithValue","response","error","_error$response","data","message","makeMove","moveData","_error$response2","getGameState","gameId","_error$response3","initialState","board","currentPlayer","gameOver","winner","isDraw","loading","nextMove","gameSlice","name","reducers","resetGame","state","setBoard","action","payload","setCurrentPlayer","setGameOver","setWinner","setIsDraw","clearError","setNextMove","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$payload","_action$payload2","_action$payload3","actions","reducer"],"sources":["/Users/yousuf/Downloads/tic-tac-toe-engine/react-web-app/src/store/slices/gameSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { gameService } from '../../services/gameService';\n\n// Async thunks\nexport const startGame = createAsyncThunk(\n  'game/startGame',\n  async (startedBy, { rejectWithValue }) => {\n    try {\n      const response = await gameService.startGame(startedBy);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || { message: 'Failed to start game' });\n    }\n  }\n);\n\nexport const makeMove = createAsyncThunk(\n  'game/makeMove',\n  async (moveData, { rejectWithValue }) => {\n    try {\n      const response = await gameService.makeMove(moveData);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || { message: 'Failed to make move' });\n    }\n  }\n);\n\nexport const getGameState = createAsyncThunk(\n  'game/getGameState',\n  async (gameId, { rejectWithValue }) => {\n    try {\n      const response = await gameService.getGameState(gameId);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || { message: 'Failed to get game state' });\n    }\n  }\n);\n\nconst initialState = {\n  board: [\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0]\n  ],\n  currentPlayer: 'X',\n  gameOver: false,\n  winner: null,\n  isDraw: false,\n  gameId: null,\n  startedBy: null,\n  loading: false,\n  error: null,\n  nextMove: null,\n};\n\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    resetGame: (state) => {\n      state.board = [\n        [0, 0, 0],\n        [0, 0, 0],\n        [0, 0, 0]\n      ];\n      state.currentPlayer = 'X';\n      state.gameOver = false;\n      state.winner = null;\n      state.isDraw = false;\n      state.gameId = null;\n      state.startedBy = null;\n      state.error = null;\n      state.nextMove = null;\n    },\n    setBoard: (state, action) => {\n      state.board = action.payload;\n    },\n    setCurrentPlayer: (state, action) => {\n      state.currentPlayer = action.payload;\n    },\n    setGameOver: (state, action) => {\n      state.gameOver = action.payload;\n    },\n    setWinner: (state, action) => {\n      state.winner = action.payload;\n    },\n    setIsDraw: (state, action) => {\n      state.isDraw = action.payload;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n    setNextMove: (state, action) => {\n      state.nextMove = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Start Game\n      .addCase(startGame.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(startGame.fulfilled, (state, action) => {\n        state.loading = false;\n        state.board = action.payload.board;\n        state.currentPlayer = action.payload.currentPlayer;\n        state.gameOver = action.payload.gameOver;\n        state.winner = action.payload.winner;\n        state.isDraw = action.payload.isDraw;\n        state.gameId = action.payload.gameId;\n        state.startedBy = action.payload.startedBy;\n        state.nextMove = action.payload.nextMove;\n      })\n      .addCase(startGame.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to start game';\n      })\n      // Make Move\n      .addCase(makeMove.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(makeMove.fulfilled, (state, action) => {\n        state.loading = false;\n        state.board = action.payload.board;\n        state.currentPlayer = action.payload.currentPlayer;\n        state.gameOver = action.payload.gameOver;\n        state.winner = action.payload.winner;\n        state.isDraw = action.payload.isDraw;\n        state.nextMove = action.payload.nextMove;\n      })\n      .addCase(makeMove.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to make move';\n      })\n      // Get Game State\n      .addCase(getGameState.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getGameState.fulfilled, (state, action) => {\n        state.loading = false;\n        state.board = action.payload.board;\n        state.gameOver = action.payload.gameOver;\n        state.winner = action.payload.winner;\n        state.isDraw = action.payload.isDraw;\n        state.startedBy = action.payload.startedBy;\n      })\n      .addCase(getGameState.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to get game state';\n      });\n  },\n});\n\nexport const {\n  resetGame,\n  setBoard,\n  setCurrentPlayer,\n  setGameOver,\n  setWinner,\n  setIsDraw,\n  clearError,\n  setNextMove,\n} = gameSlice.actions;\n\nexport default gameSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}