{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'/api';// Create axios instance with default config\nconst apiClient=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add token to requests if available\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Handle token expiration\napiClient.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export const gameService={// Start a new game\nasync startGame(startedBy){const response=await apiClient.post('/game/start',{startedBy});return response.data;},// Make a move\nasync makeMove(moveData){const response=await apiClient.post('/game/move',moveData);return response.data;},// Get current game state\nasync getGameState(gameId){const response=await apiClient.get(`/game/state/${gameId}`);return response.data;},// Helper function to check if a move is valid\nisValidMove(board,row,col){return board[row][col]===null;},// Helper function to check if game is over\ncheckGameOver(board){// Check rows\nfor(let i=0;i<3;i++){if(board[i][0]!==null&&board[i][0]===board[i][1]&&board[i][1]===board[i][2]){return{gameOver:true,winner:board[i][0]};}}// Check columns\nfor(let j=0;j<3;j++){if(board[0][j]!==null&&board[0][j]===board[1][j]&&board[1][j]===board[2][j]){return{gameOver:true,winner:board[0][j]};}}// Check diagonals\nif(board[0][0]!==null&&board[0][0]===board[1][1]&&board[1][1]===board[2][2]){return{gameOver:true,winner:board[0][0]};}if(board[0][2]!==null&&board[0][2]===board[1][1]&&board[1][1]===board[2][0]){return{gameOver:true,winner:board[0][2]};}// Check for draw\nconst isDraw=board.every(row=>row.every(cell=>cell!==null));if(isDraw){return{gameOver:true,winner:null,isDraw:true};}return{gameOver:false,winner:null};},// Helper function to get current player\ngetCurrentPlayer(board){const xCount=board.flat().filter(cell=>cell===1).length;const oCount=board.flat().filter(cell=>cell===2).length;return xCount===oCount?'X':'O';},// Helper function to make a move on the board\nmakeMoveOnBoard(board,row,col,player){const newBoard=board.map(row=>[...row]);newBoard[row][col]=player==='X'?1:2;return newBoard;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","gameService","startGame","startedBy","post","data","makeMove","moveData","getGameState","gameId","get","isValidMove","board","row","col","checkGameOver","i","gameOver","winner","j","isDraw","every","cell","getCurrentPlayer","xCount","flat","filter","length","oCount","makeMoveOnBoard","player","newBoard","map"],"sources":["/Users/yousuf/Downloads/tic-tac-toe-engine/react-web-app/src/services/gameService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '/api';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle token expiration\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const gameService = {\n  // Start a new game\n  async startGame(startedBy) {\n    const response = await apiClient.post('/game/start', { startedBy });\n    return response.data;\n  },\n\n  // Make a move\n  async makeMove(moveData) {\n    const response = await apiClient.post('/game/move', moveData);\n    return response.data;\n  },\n\n  // Get current game state\n  async getGameState(gameId) {\n    const response = await apiClient.get(`/game/state/${gameId}`);\n    return response.data;\n  },\n\n  // Helper function to check if a move is valid\n  isValidMove(board, row, col) {\n    return board[row][col] === null;\n  },\n\n  // Helper function to check if game is over\n  checkGameOver(board) {\n    // Check rows\n    for (let i = 0; i < 3; i++) {\n      if (board[i][0] !== null && \n          board[i][0] === board[i][1] && \n          board[i][1] === board[i][2]) {\n        return { gameOver: true, winner: board[i][0] };\n      }\n    }\n\n    // Check columns\n    for (let j = 0; j < 3; j++) {\n      if (board[0][j] !== null && \n          board[0][j] === board[1][j] && \n          board[1][j] === board[2][j]) {\n        return { gameOver: true, winner: board[0][j] };\n      }\n    }\n\n    // Check diagonals\n    if (board[0][0] !== null && \n        board[0][0] === board[1][1] && \n        board[1][1] === board[2][2]) {\n      return { gameOver: true, winner: board[0][0] };\n    }\n\n    if (board[0][2] !== null && \n        board[0][2] === board[1][1] && \n        board[1][1] === board[2][0]) {\n      return { gameOver: true, winner: board[0][2] };\n    }\n\n    // Check for draw\n    const isDraw = board.every(row => row.every(cell => cell !== null));\n    if (isDraw) {\n      return { gameOver: true, winner: null, isDraw: true };\n    }\n\n    return { gameOver: false, winner: null };\n  },\n\n  // Helper function to get current player\n  getCurrentPlayer(board) {\n    const xCount = board.flat().filter(cell => cell === 1).length;\n    const oCount = board.flat().filter(cell => cell === 2).length;\n    return xCount === oCount ? 'X' : 'O';\n  },\n\n  // Helper function to make a move on the board\n  makeMoveOnBoard(board, row, col, player) {\n    const newBoard = board.map(row => [...row]);\n    newBoard[row][col] = player === 'X' ? 1 : 2;\n    return newBoard;\n  },\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}