{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { statsService } from '../../services/statsService';\n\n// Async thunks\nexport const fetchUserStats = createAsyncThunk('stats/fetchUserStats', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await statsService.getUserStats();\n    return response;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      message: 'Failed to fetch user stats'\n    });\n  }\n});\nexport const fetchRecentGames = createAsyncThunk('stats/fetchRecentGames', async (limit = 10, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await statsService.getRecentGames(limit);\n    return response;\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'Failed to fetch recent games'\n    });\n  }\n});\nexport const fetchLeaderboard = createAsyncThunk('stats/fetchLeaderboard', async (limit = 10, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await statsService.getLeaderboard(limit);\n    return response;\n  } catch (error) {\n    var _error$response3;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n      message: 'Failed to fetch leaderboard'\n    });\n  }\n});\nconst initialState = {\n  userStats: {\n    wins: 0,\n    losses: 0,\n    draws: 0,\n    totalGames: 0,\n    winPercentage: 0\n  },\n  recentGames: [],\n  leaderboard: [],\n  loading: false,\n  error: null\n};\nconst statsSlice = createSlice({\n  name: 'stats',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    updateUserStats: (state, action) => {\n      state.userStats = {\n        ...state.userStats,\n        ...action.payload\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch User Stats\n    .addCase(fetchUserStats.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchUserStats.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userStats = action.payload;\n    }).addCase(fetchUserStats.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message) || 'Failed to fetch user stats';\n    })\n    // Fetch Recent Games\n    .addCase(fetchRecentGames.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchRecentGames.fulfilled, (state, action) => {\n      state.loading = false;\n      state.recentGames = action.payload.games;\n    }).addCase(fetchRecentGames.rejected, (state, action) => {\n      var _action$payload2;\n      state.loading = false;\n      state.error = ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message) || 'Failed to fetch recent games';\n    })\n    // Fetch Leaderboard\n    .addCase(fetchLeaderboard.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchLeaderboard.fulfilled, (state, action) => {\n      state.loading = false;\n      state.leaderboard = action.payload.leaderboard;\n    }).addCase(fetchLeaderboard.rejected, (state, action) => {\n      var _action$payload3;\n      state.loading = false;\n      state.error = ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.message) || 'Failed to fetch leaderboard';\n    });\n  }\n});\nexport const {\n  clearError,\n  updateUserStats\n} = statsSlice.actions;\nexport default statsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","statsService","fetchUserStats","_","rejectWithValue","response","getUserStats","error","_error$response","data","message","fetchRecentGames","limit","getRecentGames","_error$response2","fetchLeaderboard","getLeaderboard","_error$response3","initialState","userStats","wins","losses","draws","totalGames","winPercentage","recentGames","leaderboard","loading","statsSlice","name","reducers","clearError","state","updateUserStats","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$payload","games","_action$payload2","_action$payload3","actions","reducer"],"sources":["/Users/yousuf/Downloads/tic-tac-toe-engine/react-web-app/src/store/slices/statsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { statsService } from '../../services/statsService';\n\n// Async thunks\nexport const fetchUserStats = createAsyncThunk(\n  'stats/fetchUserStats',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await statsService.getUserStats();\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || { message: 'Failed to fetch user stats' });\n    }\n  }\n);\n\nexport const fetchRecentGames = createAsyncThunk(\n  'stats/fetchRecentGames',\n  async (limit = 10, { rejectWithValue }) => {\n    try {\n      const response = await statsService.getRecentGames(limit);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || { message: 'Failed to fetch recent games' });\n    }\n  }\n);\n\nexport const fetchLeaderboard = createAsyncThunk(\n  'stats/fetchLeaderboard',\n  async (limit = 10, { rejectWithValue }) => {\n    try {\n      const response = await statsService.getLeaderboard(limit);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || { message: 'Failed to fetch leaderboard' });\n    }\n  }\n);\n\nconst initialState = {\n  userStats: {\n    wins: 0,\n    losses: 0,\n    draws: 0,\n    totalGames: 0,\n    winPercentage: 0,\n  },\n  recentGames: [],\n  leaderboard: [],\n  loading: false,\n  error: null,\n};\n\nconst statsSlice = createSlice({\n  name: 'stats',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    updateUserStats: (state, action) => {\n      state.userStats = { ...state.userStats, ...action.payload };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch User Stats\n      .addCase(fetchUserStats.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchUserStats.fulfilled, (state, action) => {\n        state.loading = false;\n        state.userStats = action.payload;\n      })\n      .addCase(fetchUserStats.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to fetch user stats';\n      })\n      // Fetch Recent Games\n      .addCase(fetchRecentGames.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchRecentGames.fulfilled, (state, action) => {\n        state.loading = false;\n        state.recentGames = action.payload.games;\n      })\n      .addCase(fetchRecentGames.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to fetch recent games';\n      })\n      // Fetch Leaderboard\n      .addCase(fetchLeaderboard.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchLeaderboard.fulfilled, (state, action) => {\n        state.loading = false;\n        state.leaderboard = action.payload.leaderboard;\n      })\n      .addCase(fetchLeaderboard.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to fetch leaderboard';\n      });\n  },\n});\n\nexport const { clearError, updateUserStats } = statsSlice.actions;\nexport default statsSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}