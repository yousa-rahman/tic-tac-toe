{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '/api';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle token expiration\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const gameService = {\n  // Start a new game\n  async startGame(startedBy) {\n    const response = await apiClient.post('/game/start', {\n      startedBy\n    });\n    return response.data;\n  },\n  // Make a move\n  async makeMove(moveData) {\n    const response = await apiClient.post('/game/move', moveData);\n    return response.data;\n  },\n  // Get current game state\n  async getGameState(gameId) {\n    const response = await apiClient.get(`/game/state/${gameId}`);\n    return response.data;\n  },\n  // Helper function to check if a move is valid\n  isValidMove(board, row, col) {\n    return board[row][col] === 0;\n  },\n  // Helper function to check if game is over\n  checkGameOver(board) {\n    // Check rows\n    for (let i = 0; i < 3; i++) {\n      if (board[i][0] !== 0 && board[i][0] === board[i][1] && board[i][1] === board[i][2]) {\n        return {\n          gameOver: true,\n          winner: board[i][0]\n        };\n      }\n    }\n\n    // Check columns\n    for (let j = 0; j < 3; j++) {\n      if (board[0][j] !== 0 && board[0][j] === board[1][j] && board[1][j] === board[2][j]) {\n        return {\n          gameOver: true,\n          winner: board[0][j]\n        };\n      }\n    }\n\n    // Check diagonals\n    if (board[0][0] !== 0 && board[0][0] === board[1][1] && board[1][1] === board[2][2]) {\n      return {\n        gameOver: true,\n        winner: board[0][0]\n      };\n    }\n    if (board[0][2] !== 0 && board[0][2] === board[1][1] && board[1][1] === board[2][0]) {\n      return {\n        gameOver: true,\n        winner: board[0][2]\n      };\n    }\n\n    // Check for draw\n    const isDraw = board.every(row => row.every(cell => cell !== 0));\n    if (isDraw) {\n      return {\n        gameOver: true,\n        winner: null,\n        isDraw: true\n      };\n    }\n    return {\n      gameOver: false,\n      winner: null\n    };\n  },\n  // Helper function to get current player\n  getCurrentPlayer(board) {\n    const xCount = board.flat().filter(cell => cell === 1).length;\n    const oCount = board.flat().filter(cell => cell === 2).length;\n    return xCount === oCount ? 'X' : 'O';\n  },\n  // Helper function to make a move on the board\n  makeMoveOnBoard(board, row, col, player) {\n    const newBoard = board.map(row => [...row]);\n    newBoard[row][col] = player === 'X' ? 1 : 2;\n    return newBoard;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","gameService","startGame","startedBy","post","data","makeMove","moveData","getGameState","gameId","get","isValidMove","board","row","col","checkGameOver","i","gameOver","winner","j","isDraw","every","cell","getCurrentPlayer","xCount","flat","filter","length","oCount","makeMoveOnBoard","player","newBoard","map"],"sources":["/Users/yousuf/Downloads/tic-tac-toe-engine/react-web-app/src/services/gameService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '/api';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle token expiration\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const gameService = {\n  // Start a new game\n  async startGame(startedBy) {\n    const response = await apiClient.post('/game/start', { startedBy });\n    return response.data;\n  },\n\n  // Make a move\n  async makeMove(moveData) {\n    const response = await apiClient.post('/game/move', moveData);\n    return response.data;\n  },\n\n  // Get current game state\n  async getGameState(gameId) {\n    const response = await apiClient.get(`/game/state/${gameId}`);\n    return response.data;\n  },\n\n  // Helper function to check if a move is valid\n  isValidMove(board, row, col) {\n    return board[row][col] === 0;\n  },\n\n  // Helper function to check if game is over\n  checkGameOver(board) {\n    // Check rows\n    for (let i = 0; i < 3; i++) {\n      if (board[i][0] !== 0 && \n          board[i][0] === board[i][1] && \n          board[i][1] === board[i][2]) {\n        return { gameOver: true, winner: board[i][0] };\n      }\n    }\n\n    // Check columns\n    for (let j = 0; j < 3; j++) {\n      if (board[0][j] !== 0 && \n          board[0][j] === board[1][j] && \n          board[1][j] === board[2][j]) {\n        return { gameOver: true, winner: board[0][j] };\n      }\n    }\n\n    // Check diagonals\n    if (board[0][0] !== 0 && \n        board[0][0] === board[1][1] && \n        board[1][1] === board[2][2]) {\n      return { gameOver: true, winner: board[0][0] };\n    }\n\n    if (board[0][2] !== 0 && \n        board[0][2] === board[1][1] && \n        board[1][1] === board[2][0]) {\n      return { gameOver: true, winner: board[0][2] };\n    }\n\n    // Check for draw\n    const isDraw = board.every(row => row.every(cell => cell !== 0));\n    if (isDraw) {\n      return { gameOver: true, winner: null, isDraw: true };\n    }\n\n    return { gameOver: false, winner: null };\n  },\n\n  // Helper function to get current player\n  getCurrentPlayer(board) {\n    const xCount = board.flat().filter(cell => cell === 1).length;\n    const oCount = board.flat().filter(cell => cell === 2).length;\n    return xCount === oCount ? 'X' : 'O';\n  },\n\n  // Helper function to make a move on the board\n  makeMoveOnBoard(board, row, col, player) {\n    const newBoard = board.map(row => [...row]);\n    newBoard[row][col] = player === 'X' ? 1 : 2;\n    return newBoard;\n  },\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}